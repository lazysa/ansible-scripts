---
# This playbook contains common plays that will be run on all nodes.
##

- name: Create mongo_bak_dir
  command: mkdir -p {{ mongo_bak_dir }}/$(date '+%F_%H')
  tags: mongo

- name: Backup MongoDB by mongodump
  shell: /usr/bin/mongodump --host {{ mongo_host }} --port {{ mongo_port }} --db {{ mongo_db }} --out $(date '+%F_%H')
  args:
    chdir: "{{ mongo_bak_dir }}"
  tags: mongo
  
 
- name: Starting Backup, Create backup dir 
  shell: mkdir -p {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/
  tags:
     - always
     - backup 

- name: Backup audience_api
  shell: \cp -ar {{ dmp_dir }}/audience_api {{ dmp_bak_dir }}/$(date '+%F_%H')/
 # copy: src={{ dmp_dir }}/audience_api dest={{ dmp_bak_dir }}/$(date '+%F_%H')/audience_api remote_src=yes 
  tags: 
     - backup
     - audience_api

- name: Backup data-assets-report-api
  shell: \cp -ar {{ dmp_dir }}/data-assets-report-api {{ dmp_bak_dir }}/$(date '+%F_%H')/
  tags:
     - backup
     - data-assets-report-api

- name: Backup datapi
  shell: \cp -ar {{ dmp_dir }}/datapi {{ dmp_bak_dir }}/$(date '+%F_%H')/
  tags:
     - backup
     - dataapi

- name: Backup analytics 
  shell: \cp -ar {{ dmp_dir }}/data-suite/analytics {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/
  tags:
     - backup
     - analytics 

- name: Backup data-assets
  shell: \cp -ar {{ dmp_dir }}/data-suite/data-assets {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/
  tags:
     - backup
     - data-assets

- name: Backup upm 
  shell: \cp -ar {{ dmp_dir }}/data-suite/upm {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/
  tags:
     - backup
     - upm

- name: Backup audience 
  shell: \cp -ar {{ dmp_dir }}/data-suite/audience {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/
  tags:
     - backup
     - audience 


- name: Starting deploy, Create deploy dir 
  shell: mkdir -p {{ dmp_deploy_dir }}/$(date '+%F_%H')
  tags:
     - always

      
##
- name: Copy local deploy file to server's temp dir
  copy: src={{ item }} dest={{ dmp_deploy_dir }} mode=0755
  with_items:
    - web_webapps.zip
    - file
    - sql
  tags:
     - always 
     - file


- name: Unarchive webapps.zip 
#  unarchive: src={{ dmp_deploy_dir }}/web_webapps.zip dest=/mnt copy=no mode=0755
  shell: unzip -od /mnt {{ dmp_deploy_dir }}/web_webapps.zip
  tags: always

#- name: Unarchive webapps.zip 
#  unarchive: src={{ dmp_deploy_dir }}/web_webapps.zip dest=/mnt copy=no mode=0755


# analytics config
- name: Copy analytics last config file
  shell: \cp -ar {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/analytics/{{ webapi_conf }} {{ dmp_dir }}/data-suite/analytics/{{ webapi_conf }}
  tags:
     - config
     - analytics 

# audience config
- name: Copy audience last config file
  shell: \cp -ar {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/audience/{{ webapi_conf }} {{ dmp_dir }}/data-suite/audience/{{ webapi_conf }}
  tags:
     - config
     - audience 

# data-assets  config
- name: Copy data-assets last config file
  shell: \cp -ar {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/data-assets/{{ webapi_conf }} {{ dmp_dir }}/data-suite/data-assets/{{ webapi_conf }}
  tags:
     - config
     - data-assets 

# upm config
- name: Copy upm last config file
  shell: \cp -ar {{ dmp_bak_dir }}/$(date '+%F_%H')/data-suite/upm/{{ webapi_conf }} {{ dmp_dir }}/data-suite/upm/{{ webapi_conf }}
  tags:
     - config
     - upm


#- name: stop audience_api services
#  command: "{{ item }}"
#  args: 
#    chdir: "{{ audience_api_dir }}"
#  with_items: 
#    - "sh stop.sh"
##    - "sh stopjob.sh"
#
#- name: stop datapi services
#  command: "{{ item }}"
#  args: 
#    chdir: "{{ datapi_dir }}"
#  with_items: 
#    - "sh stop.sh"
##    - "sh stopjob.sh"
#
#- name: stop data-assets-report-api service
#  command: "{{ item }}"
#  args: 
#    chdir: "{{ data-assets-report-api_dir }}"
#  with_items: 
#    - "sh stop.sh"
#    - "sh stopjob.sh"


#- name: confirmation deploy file's date 
#  stat: path=
#  shell: ls -l {{ dmp_dir }}/data-suite/audience/webapi/


- name: confirmation upm file date 
  command: ls -l {{item}}
  register: upm_date
  args:
    chdir: /mnt/webapps/data-suite/upm/
  with_items:
    - webapi
    - webapp/index.html
  tags: 
     - confirm
     - upm

- debug: var=upm_date
  tags: 
     - confirm
     - upm

- name: confirmation analytics file date 
  command: ls -l {{item}}
  register: analytics_date
  args:
    chdir: /mnt/webapps/data-suite/analytics/
  with_items:
    - webapi
    - webapp/index.html
  tags: 
     - confirm
     - analytics
- debug: var=analytics_date
  tags: 
     - confirm
     - analytics

- name: confirmation audience file date 
  command: ls -l {{item}}
  register: audience_date
  args:
    chdir: /mnt/webapps/data-suite/audience/
  with_items:
    - webapi
    - webapp/index.html
  tags: 
     - confirm
     - audience

- debug: var=audience_date
  tags: 
     - confirm
     - audience

- name: confirmation data-assets file date 
  command: ls -l {{item}}
  register: dataassets_date
  args:
    chdir: /mnt/webapps/data-suite/data-assets/
  with_items:
    - webapi
    - webapp/index.html
  tags: 
     - confirm
     - data-assets

- debug: var=dataassets_date
  tags: 
     - confirm
     - data-assets


- name: Archive deploy file
  shell: mv -f {{ dmp_deploy_dir }}/{{ item }} {{ dmp_deploy_dir }}/$(date '+%F_%H')/
  with_items:
    - web_webapps.zip
    - file
    - sql
  tags:
     - always
     - archive 


- name: Delete 60d ago backup file
  shell: cd {{ dmp_bak_dir }} && find . -mtime +60 -type d -print0 | xargs -0 /bin/rm -fr 
  tags: 
     - always
     - clean
   
- name: Delete 15d ago deploy file
  shell: cd {{ dmp_deploy_dir }} && find . -mtime +15 -type d -print0 | xargs -0 /bin/rm -fr 
  tags: 
     - always
     - clean
     
- name: Delete 60d ago mongo and mysql file 
  shell: cd {{item}} && find . -mtime +60 -print0 | xargs -0 /bin/rm -fr 
  with_items:
    - "{{ mongo_bak_dir }}"
  tags: 
     - mongo
     - clean


##  shell: \cp -ar {{ dmp_deploy_dir }}/$(date '+%F_%H')/data-suite/analytics/webapi/analytics-20170920/* {{ dmp_dir }}/data-suite/analytics/webapi
#- name: Restart webapi by pm2 
#  shell: /usr/local/bin/pm2 ls 
#  #shell: pm2 restart analytics-sync analytics-webapi
#
